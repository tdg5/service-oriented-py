[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=69",
  "setuptools-scm>=8.0.4"
]

[project]
authors = [
  {name = "Danny Guinther"},
]
classifiers=[
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.9",
]
dependencies = [
  "pydantic-settings~=2.1.0",
  "pydantic~=2.5.3",
  "python-json-logger==2.0.7",
  "pyyaml~=6.0.1",
]
description = "Toolkit for building service oriented applications in python"
dynamic = ["version"]
license = {text = "MIT"}
name = "service_oriented"
readme = "README.md"
requires-python = ">3.9.0"

[project.optional-dependencies]
dev = [
  "black~=24.2.0",
  "build~=1.0.3",
  "coverage-badge~=1.1.0",
  "coverage~=7.4.4",
  "dlint~=0.14.1",
  "flake8-comprehensions~=3.14.0",
  "flake8-eradicate~=1.5.0",
  "flake8-pyproject~=1.2.3",
  "flake8-spellcheck~=0.28.0",
  "flake8-typing-imports~=1.15.0",
  "flake8~=7.0.0",
  "isort~=5.13.2",
  "mypy~=1.8.0",
  "pep8-naming~=0.13.3",
  "pre-commit~=3.6.0",
  "pytest-mock~=3.12.0",
  "pytest-watcher~=0.4.2",
  "pytest~=7.4.0",
  "rodi~=2.0.6",
  "safety~=2.3.4",
  "twine~=4.0.2",
  "wheel>=0.42.0",
]
all = ["service-oriented[dev]"]

[project.urls]
Homepage = "https://github.com/tdg5/service-oriented-py"
Source = "https://github.com/tdg5/service-oriented-py"
Tracker = "https://github.com/tdg5/service-oriented-py/issues"

[tool.black]
include = "service_oriented(_test)?/.*\\.py$"
line-length = 88
target-version = ["py39"]

[tool.coverage.run]
source = [
  "service_oriented",
  "service_oriented_test/example_application",
]

[tool.flake8]
ignore = ["E203", "E251", "E701", "N805", "W503", "DAR101", "DAR201", "DAR301", "DAR401"]
max-line-length = 88
min_python_version = "3.9.0"

[tool.isort]
include_trailing_comma = true
known_first_party = ["service_oriented", "service_oriented_test"]
line_length = 88
lines_after_imports = 2
multi_line_output = 3
profile = "black"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
use_parentheses = true

[tool.mypy]
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = false
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true

[tool.pytest.ini_options]
markers = ["integration_test: marks tests as integration tests (deselect with '-m \"not integration_test\"')"]

[tool.setuptools.package-data]
"service_oriented" = ["py.typed"]

[tool.setuptools.packages.find]
include = [
  "service_oriented",
  "service_oriented.application",
  "service_oriented.application.config",
  "service_oriented.services",
  "service_oriented.logging",
]
where = ["."]

[tool.setuptools_scm]
version_file = "service_oriented/__version__.py"
